names(d.l) <- "df1"
d.l
fv
head(fv)
RF_prob
str(RF_prob)
str(RF_prob)
RF_prob_fil
tsk
install.packages("FSelector")
library(FSelector)
install.packages("rJava")
library(rJava)
fv
ModelBuildingRDSs
img.nm
ModelBuildingRDSs
location
ModelBuilding.appendage
ModelBuildingRDSs
ModelBuildingRDSs
dd.training.dir
getwd()
y
y
cl
cores
registerDoSEQ()
library(parallel)    
cluster <- makePSOCKcluster("localhost")    
parSapply(cluster, 1:5, sqrt)
stopCluster(cluster)
cluster <- makePSOCKcluster("localhost")
stopCluster()
stopCluster(cluster)
cluster <- makePSOCKcluster("localhost")
registerDoSEQ()

cluster <- makePSOCKcluster("localhost")
port
cluster <- makecluster("localhost")
cluster <- makeCluster("localhost")
cluster <- makeCluster(cl)
library(parallel)
warnings()
registerDoSEQ()

stopCluster()
stopImplicitCluster()
warnings()
stopImplicitCluster()
stopCluster()
registerDoSEQ()

cl <- makeCluster(cores, port = 11723)
library(parallel)    
cluster <- makePSOCKcluster("localhost")    
parSapply(cluster, 1:5, sqrt)
stopCluster(cluster)
registerDoSEQ()
stopImplicitCluster()
stopCluster()
closeAllConnections()
30
closeAllConnections()
closeAllConnections()
warnings()
closeAllConnections()
closeAllConnections()
warngins()
warnings()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
cores
closeAllConnections()
closeAllConnections()
closeAllConnections()
warnings()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
stopCluster()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
stopCluster()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
registerDoSEQ()
closeAllConnections()
closeAllConnections()
stop()
closeAllConnections()
closeAllConnections()
ModelBuildingRDSs
ModelBuildingRDS <- ModelBuildingRDSs[1]
img.nm
ModelBuildingRDS <- ModelBuildingRDSs[13]
img.nm
ModelBuildingRDS <- ModelBuildingRDSs[25]
img.nm
nrows(df)
closeAllConnections()
closeAllConnections()
warnings()
head(tile.names)
head(tile.names)
img.nm
list.files(dd.accuracy.dir)
location
head(tile.names)
img.nm
closeAllConnections()
str(error.df)
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
str(naip.extents)
naip.dir
naip.tif.names
closeAllConnections()
str(naip.stacks)
str(naip.stack)
str(naip.stacks)
naip.stacks
naip.stacks2
identical(naip.stacks, naip.stacks2)
i
i <- 1
temp_i
tiles.names.at.urb.poly
tile.name.at.urb.poly <- tiles.names.at.urb.poly
tile.name.at.urb.poly <- tiles.names.at.urb.poly[1]
gdal_setInstallation(ignore.full_scan=FALSE)
gdal_setInstallation(ignore.full_scan=FALSE)
library(rgdal)
naip.stacks
i_areas_less_quant
i <- 13
i
 closeAllConnections()
 closeAllConnections()
 closeAllConnections()
 closeAllConnections()
 closeAllConnections()
 closeAllConnections()
 closeAllConnections()
 closeAllConnections()
 closeAllConnections()
}
classified.tiles
out
plot(20)
utm16
i_areas_less_quant
i_areas_high_quant
urb.polys[1]
plot(urb.polys)
plot(urb.polys[1])
areas
str(areas)
arrange(areas)











i_areas_high_quant
i_areas_high_quant
i_areas_high_quant
plot(urb.polys[6])
i_areas_high_quant
plot(urb.polys[11])
plot(urb.polys[30])
plot(urb.polys[34])
i_areas_high_quant
i_areas_high_quant
i_areas_high_quant[23]
?citation()
citation()











citation("dplyr")
citation(c("sp","rgdal","rgeos","glcm","dplyr"))
citation("glcm")
citation("sp")
citation("rgdal")
citation("rgeos")
citation("doParallel")
citation("foreach")
citation("mlr")
citation(raster)
citation("raster")
citation(randomForest)
citation("randomForest")
citation("kernlab")
citation("kernlab")
citation("irace")
     tiles.in.urban <-  lapply(naip.extents, function(naip.extent) {
naip.extents[[1]]
intermediate.work
urb.path
urb.path <- "../DD/ClassifiedUrbanAreas/30"
urb.path
intermediate.work
head(grd.df)
grid.accuracy.region.dsn
grid.accuracy.region.layer
head(Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets)
(Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets) %>% data.frame
(Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets) %>% data.frame
head(grd.df)
head(grd.df, n = 30)
100/15
100/14
7.14+2
9.14*2
9.14*9.14
7.14*2+2
16.28*-16.28
sqrt(.25/25)
sqrt(.25*.75/25)
(Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets) %>% data.frame
14*14
(Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets) %>% data.frame
df <- grd.df
n.rows.and.columns.subset <- 3
mod
gridID <- "unq__ID"
head(df)
area.df %>% head
head(df)
head(df)
str(grd.df)
unique(grd.df$unq__ID)
unique(grd.df$unq__ID)
(grd.df$unq__ID)
grd.df
(grd.df$unq__ID)
grd.df
"mad.*" %in% grd.df$unq__ID
"mad" %in% grd.df$unq__ID
grd.df$unq__ID
grd.df$unq__ID
"mad" %in% grd.df$unq__ID
grd.df$unq__ID %in% "mad"
grd.df$unq__ID %in% "mad.*"
sum(grd.df$unq__ID %in% "mad.*")
?stringr
grepl("mad.*", grd.df$unq__ID)
Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets %>% head
Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets %>% head
Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets %>% head
str(Percent.Cover.Grids)











str(Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets.mod.25)
(Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets.mod.25)
(Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets.mod.25) %>% data.frame
Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets.mod.5 %>% data.frame











str(Percent.Cover.Grids.with.diff.targettypes.and.diff.subsets.mod1)
str(Percent.Cover.Grids)
derived.dir
head(classified.tile.paths)
grid.pattern
head(classified.tile.paths)
head(classified.tile.paths)
length(classified.tile.paths)
(classified.tile.paths)
head(error.df)











classified.tile.paths
closeAllConnections()
closeAllConnections()
cores
cores <- 2
closeAllConnections()
cores
cores <- 2
pts <- grd
tile.path
tile.paths[1]
tile.path <- classified.tile.paths[1]
tile.path
tile.pth <- tile.path
n.rows.and.columns.subset <- 2
!is.null(raster::intersect(extent(tile),bbox(pts.at.grid)))
pts.sub
pts.at.grid
tile.unique.name











}
closeAllConnections()
a
n.rows.and.columns.for.sub
grd
tile.path
n.rows.and.columns.for.sub
a
pct.class.cover
closeAllConnections()
pc
pct.class.cover
str(pc)
pc
pct.class.cover
classified.tile.paths







str(classified.tile.paths)
str(classified.tile.paths)
grid.pattern
head(classified.tile.paths, n = 42)
tile.pth <- classified.tile.paths[42]
mad.grid.id.pattern
!is.null(raster::intersect(extent(tile),bbox(pts.at.grid)))
grid.pattern
tile.path
n.rows.and.columns.for.sub
n.rows.and.columns.subset
n.rows.and.columns.subset <- 15
pts.at.grid
tile.unique.name
pts.sub
pts.sub
str(pts.sub)
pts.sub
pts.at.grid
!is.null(raster::intersect(extent(tile),bbox(pts.at.grid)))
ch
pts.at.grid
tile.pth
tile.nm
pts.sub
pts.at.grid
tile.unique.name
sum(pts.sub@data$unq__ID == tile.unique.name)
bbox(pts.at.grid)
length(pts.at.grid)
pct.class.cover
out
pct.class.cover
class.cover.files
str(out)
str(Percent.Cover.Classified.Tiles.dataframe)
Percent.Cover.Grids
}
head(RMSE_tree)
RMSE_tree
str(classified.tile.paths)
str(classified.tile.paths)
1748/38
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
}
closeAllConnections()
closeAllConnections()
filter(grid.master.df,grid == "mad.100m.28")
tile
points <- pts.at.grid
get.prcnt.class(points, tile)
tile.nm
tile.nm <- "madisonNAIP.mad.100m.28_N-30_C-15_madisonNAIP_all_Untuned_rf_prob.tif"
get.prcnt.class(points, tile)
tile.pth
tile.pth <- "../DD/madison_Accuracy/ClassifiedTiles/madisonNAIP.mad.100m.28_N-30_C-15_madisonNAIP_all_Untuned_rf_prob.tif"
tile.pth
get.prcnt.class(points, tile)
tile
cellStats(tile)
cellStats(tile, stat = sum)
cellStats(tile == "g", stat = sum)
str(tile)
tile@attributes
tile@dataattributes
tile@data@attributes
tile@data@attributes[[1]]
summary(tile)
freq(tile)
r <- tile
category
}
}
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
str(grid.master.df)
classified.tile.paths[37]
tile.pth <- classified.tile.paths[37]
pts.at.grid
points <- pts.at.grid
r <- tile
id
category
df
closeAllConnections()
   grd <- readOGR(dsn = grid.accuracy.region.dsn, layer = grid.accuracy.region.layer)
install.packages("lubridate")
getwd()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
closeAllConnections()
getwd()
getwd()
getwd()
  C-c C-c  C-c C-c
